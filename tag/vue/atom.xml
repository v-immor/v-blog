<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://v-immor.github.io/v-blog</id>
    <title>开发随笔 • Posts by &#34;vue&#34; tag</title>
    <link href="https://v-immor.github.io/v-blog" />
    <updated>2021-12-29T14:16:00.000Z</updated>
    <category term="JS 基础" />
    <category term="Promise" />
    <category term="原理" />
    <category term="React" />
    <category term="Vue" />
    <entry>
        <id>https://v-immor.github.io/v-blog/2021/12/29/javascripts/vue/vue-router/</id>
        <title>Vue Router 食用指南</title>
        <link rel="alternate" href="https://v-immor.github.io/v-blog/2021/12/29/javascripts/vue/vue-router/"/>
        <content type="html">&lt;h3 id=&#34;1-起步&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-起步&#34;&gt;#&lt;/a&gt; 1. 起步&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;使用模块化，要调用 Vue.use (VueRouter)&lt;/li&gt;
&lt;li&gt;注入路由器，任何组件都可通过 this.&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mtext&gt;访问路由器，&lt;/mtext&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;router 访问路由器，this.&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.69444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;访&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;问&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;路&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;由&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;器&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;route 访问当前路由&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.nlark.com/yuque/0/2020/png/448234/1586942111407-979d831d-2d0a-4e1c-9b20-1688f38fd04f.png#align=left&amp;amp;display=inline&amp;amp;height=408&amp;amp;name=1586929561190.png&amp;amp;originHeight=408&amp;amp;originWidth=696&amp;amp;size=44854&amp;amp;status=done&amp;amp;style=none&amp;amp;width=696&#34; alt=&#34;1586929561190.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-动态路由匹配&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-动态路由匹配&#34;&gt;#&lt;/a&gt; 2. 动态路由匹配&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;路径参数使用 ：冒号标记，当匹配到一个路由，参数会被设置到 this.$route.params&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.nlark.com/yuque/0/2020/png/448234/1586942187698-19783596-ccd7-42a3-b582-ad71add0b83b.png#align=left&amp;amp;display=inline&amp;amp;height=169&amp;amp;name=1586930691665.png&amp;amp;originHeight=169&amp;amp;originWidth=297&amp;amp;size=10752&amp;amp;status=done&amp;amp;style=none&amp;amp;width=297&#34; alt=&#34;1586930691665.png&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;动态路由的参数改变（id 改变）, 例如从 /user/111 到 /user/222 ，原来的组件会被复用，意味着组件的生命周期钩子函数不会重复调用，如想复用，可用以下方法&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;用 watch 监测变化&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token literal-property property&#34;&gt;watch&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token string&#34;&gt;&#39;$route&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;to&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;from&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;使用 2.2 的 beforeRouteUpdate 导航守卫&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;beforeRouteUpdate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;to&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; from&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;捕获所有路由或 404 Not found 路由&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;*&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 匹配所有路径，放在最后&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/user-*&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 匹配 &#39;/user-&#39; 开头的任意路径，放在后面&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;3-嵌套路由&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-嵌套路由&#34;&gt;#&lt;/a&gt; 3. 嵌套路由&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;父组件包含自己的嵌套 &lt;router-view /&gt;, VueRouter 的参数使用 children 配置&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;4-编程式的导航&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-编程式的导航&#34;&gt;#&lt;/a&gt; 4. 编程式的导航&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.nlark.com/yuque/0/2020/png/448234/1586942936614-865b790d-d9cb-4acf-b511-0e08b03f3e5a.png#align=left&amp;amp;display=inline&amp;amp;height=97&amp;amp;name=1586935811809.png&amp;amp;originHeight=97&amp;amp;originWidth=407&amp;amp;size=4006&amp;amp;status=done&amp;amp;style=none&amp;amp;width=407&#34; alt=&#34;1586935811809.png&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用 router.push () ，这个方法会向 history 栈添加一个新的记录，所以当用户点击回退按钮，会回到之前的 URL。&lt;/li&gt;
&lt;li&gt;router.go (n) n 为整数，意思是在 history 记录中前进或后退几步，类似 window.history.go (n)&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;router.push&lt;/code&gt; 、  &lt;code&gt;router.replace&lt;/code&gt;  和  &lt;code&gt;router.go&lt;/code&gt;  跟 &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/History&#34;&gt; &lt;code&gt;window.history.pushState&lt;/code&gt; 、  &lt;code&gt;window.history.replaceState&lt;/code&gt;  和  &lt;code&gt;window.history.go&lt;/code&gt; &lt;/a&gt; 好像， 实际上它们确实是效仿  &lt;code&gt;window.history&lt;/code&gt;  API 的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;5-命名路由&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5-命名路由&#34;&gt;#&lt;/a&gt; 5. 命名路由&lt;/h3&gt;
&lt;p&gt;在 routes 配置中给路由设置名称&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; router &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;VueRouter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;routes&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token literal-property property&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/user/:userId&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token literal-property property&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;user&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token literal-property property&#34;&gt;component&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; User&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;6-命名视图&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#6-命名视图&#34;&gt;#&lt;/a&gt; 6. 命名视图&lt;/h3&gt;
&lt;p&gt;用于同级展示多个视图，并非嵌套展示，如侧导航 + 主内容的布局&lt;/p&gt;
&lt;h3 id=&#34;7-重定向和别名&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#7-重定向和别名&#34;&gt;#&lt;/a&gt; 7. 重定向和别名&lt;/h3&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 重定向&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/a&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;redirect&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/b&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 别名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/a&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;component&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;alias&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/b&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;8-导航守卫&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#8-导航守卫&#34;&gt;#&lt;/a&gt; 8. 导航守卫&lt;/h3&gt;
&lt;p&gt;用来通过跳转或取消的方式守卫导航，有多种机会植入路由的导航过程中：全局、单个路由独享、组件级。&lt;br&gt;
注意：参数或查询的改变不会触发进入 / 离开的导航守卫&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;router.beforeEach (to,from,next) 全局前置守卫：在导航被确认之前会进行全局拦截，常用于判断用户是否登录&lt;/li&gt;
&lt;li&gt;router.beforeResolve (to,from,next) 全局解析守卫：在导航被确认之前，同时在所有组件内守卫和异步路由组件被解析之后&lt;/li&gt;
&lt;li&gt;afterEach (to,from) 全局后置钩子：这些钩子不会接受 next 函数也不会改变导航本身&lt;/li&gt;
&lt;li&gt;beforeEnter 路由独享守卫：在路由配置上定义&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/foo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;component&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; Foo&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function-variable function&#34;&gt;beforeEnter&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;to&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; from&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// ...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;组件内守卫 beforeRouteEnter、beforeRouteUpdate、beforeRouteLeave&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;參考：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC81OWMwMDU1MTFkNzM=&#34;&gt;https://www.jianshu.com/p/59c005511d73&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;9-路由元信息meta&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#9-路由元信息meta&#34;&gt;#&lt;/a&gt; 9. 路由元信息（meta）&lt;/h3&gt;
&lt;p&gt;可通过 this.$route 拿到&lt;/p&gt;
&lt;h3 id=&#34;10-过渡动效&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#10-过渡动效&#34;&gt;#&lt;/a&gt; 10. 过渡动效&lt;/h3&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 给所有路由设置&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;transition&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;router&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;view&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;router&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;view&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;transition&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;如果需要每个路由组件有各自的过渡效果，可在各组件内使用 &lt;transition&gt;&lt;/p&gt;
&lt;h3 id=&#34;11-数据获取&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#11-数据获取&#34;&gt;#&lt;/a&gt; 11. 数据获取&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;导航完成之后获取&lt;/strong&gt;：先完成导航，后在接下来的组件生命周期钩子中获取数据。在数据获取期间显示 “加载中” 之类的指示。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;导航完成之前获取&lt;/strong&gt;：导航完成前，在路由进入的守卫中获取数据，在数据获取成功后执行导航。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;12-滚动行为&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#12-滚动行为&#34;&gt;#&lt;/a&gt; 12. 滚动行为&lt;/h3&gt;
&lt;p&gt;创建路由实例时，可提供一个 scrollBehavior (to, from, savedPosition) 方法， savedPosition 仅当 popstate 导     航（浏览器前进 / 后退）时触发。&lt;br&gt;
注意：滚动行为只在支持 history.pushState 的浏览器中可用&lt;/p&gt;
&lt;h3 id=&#34;13-路由懒加载&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#13-路由懒加载&#34;&gt;#&lt;/a&gt; 13. 路由懒加载&lt;/h3&gt;
&lt;p&gt;Webpack 2 ，可以使用动态 import 语法来定义代码分块点，如果使用 Babel，需要添加 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9iYWJlbGpzLmlvL2RvY3MvZW4vYmFiZWwtcGx1Z2luLXN5bnRheC1keW5hbWljLWltcG9ydC8=&#34;&gt;plugin-syntax-dynamic-import&lt;/span&gt;  插件&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/foo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token function-variable function&#34;&gt;component&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;./Foo.vue&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="原理" />
        <category term="Vue" />
        <updated>2021-12-29T14:16:00.000Z</updated>
    </entry>
</feed>
